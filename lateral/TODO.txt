NOTE: best model so far: pathplanner_BS16_lr1e-5_07-09-23 + combomodel_BS16_lr1e-5_11-09-23

- TRAIN PATHPLANNER: at least 50 epochs (best loss: 1.7498 at epoch 120, works fine) (DONE)
- TRAIN COMBOMODEL: custom_collate for CROSSROADS, train, compare to pathplanner plots and inference  (DONE)
- export models to .onnx for inference  (DONE)
- merge master with mdn_dev (DONE)
- run new models on ADA/sim.py  (DONE)

- README: usage
- test_video.py: run both PathPlanner and ComboModel at the same time, plot on different figures, pause and go through frame by frame, compare results
- FIX: if in a crossroad, ignores turn, but not desired turn (more data on right turns?)

NOTE: ComboModel knows when to STOP and achieves slightly better loss of policy_head for the same epochs

#-----------------------------------------

- TRAIN MDN: either set lr=1e-7 for more epochs or add more model parameters (or less?)
    MODEL_PATH="models/PathPlanner_29-09-23.pth" WRITER_PATH="runs/pathplanner_BS16_lr1e-5_29-09-23" ./train.py
- optimize MDN, underfitting
- CUSTOM PLOT for epoch training and evaluation losses to check for overfitting
- train PathPlanner and ComboModel with MDN

- test and debug MDN after studying it better first, read MDN paper
- study comma.ai stack better

- custom_collatemultiple frames as well (supercombo, ?)
- fix NaN problem with multiple workers (TEMPHACK)
- (optimization-optional) MultiVideoDataset: pseudo-normalize trajectory and get only 50 points from the 200 of trajectory (like ADA)

#===============================

- make a release
*merge cnn_dev with mdn_dev
*merge master with cnn_dev
*better README (+ docs?)
*tidy up project

#===============================

FUTURE MDOEL PREDICTIONS:
* lead_car + lead_car_prob
* pose
* (?) lane_lines, road_edges

#=====================================================================================================

- switch between Linear and MDN MTP-layer (DONE)
- cleanup runs and models, remove failed or useless experiments (DONE)
- try lr=1e-6 for MDN net, loss <= 4.5!!!  (DONE)
- label crossroads for highway driving data (91+) (DONE)
- make path prediction => <xy_points,prob> => <[pi,sigma,mean], pob> (MDN)  (DONE)
- FIX: right turns, make desire more important? (model mostly wants to go left, needs more data) (DONE)
- train ComboModel on new data  (DONE)
- evaluate after each epoch and log that  (DONE)
- retrain PathPlanner with lr=1e-5 (if 1e-3 is not good enough) (DONE)
- revert back and CNN and make switching seamless (DONE)
- optimize speed using this [ https://efficientdl.com/faster-deep-learning-in-pytorch-a-guide/ ]  (DONE)
- add learning rate scheduler (DONE)
- lr=1e-4 more epochs (maybe add weight_decay)  (DONE)
- if that doesn't work add more GRU layers (in general try to overfit if possible)  (DONE)
- 5 path plans instead of 3 (DONE)
- generalize onnx exporter for PathPlanner and SuperComboModel  (DONE)

